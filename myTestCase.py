#! /usr/bin/env python
# -*- coding: utf-8 -*-
"""
Copyright (C) 2013-2018  Diego Torres Milano
Created on 2019-08-02 by Culebra v15.8.0
                      __    __    __    __
                     /  \  /  \  /  \  /  \ 
____________________/  __\/  __\/  __\/  __\_____________________________
___________________/  /__/  /__/  /__/  /________________________________
                   | / \   / \   / \   / \   \___
                   |/   \_/   \_/   \_/   \    o \ 
                                           \_____/--<
@author: Diego Torres Milano
@author: Jennifer E. Swofford (ascii art snake)
"""


import re
import sys
import os


import unittest

from com.dtmilano.android.viewclient import ViewClient, CulebraTestCase

TAG = 'CULEBRA'


class CulebraTests(CulebraTestCase):

    @classmethod
    def setUpClass(cls):
        cls.kwargs1 = {'ignoreversioncheck': False, 'verbose': False, 'ignoresecuredevice': False}
        cls.kwargs2 = {'forceviewserveruse': False, 'useuiautomatorhelper': False, 'ignoreuiautomatorkilled': True, 'autodump': False, 'debug': {}, 'startviewserver': True, 'compresseddump': True}
        cls.options = {'start-activity': None, 'concertina': False, 'device-art': None, 'use-jar': False, 'multi-device': False, 'unit-test-class': True, 'save-screenshot': None, 'use-dictionary': False, 'glare': False, 'dictionary-keys-from': 'id', 'scale': 0.2, 'find-views-with-content-description': True, 'window': -1, 'orientation-locked': None, 'concertina-config': None, 'save-view-screenshots': None, 'find-views-by-id': True, 'log-actions': True, 'use-regexps': False, 'null-back-end': False, 'auto-regexps': None, 'do-not-verify-screen-dump': True, 'verbose-comments': False, 'gui': True, 'find-views-with-text': True, 'prepend-to-sys-path': False, 'install-apk': None, 'drop-shadow': False, 'output': 'myTestCase.py', 'unit-test-method': None, 'interactive': False}
        cls.sleep = 5

    def setUp(self):
        super(CulebraTests, self).setUp()

    def tearDown(self):
        super(CulebraTests, self).tearDown()

    def preconditions(self):
        if not super(CulebraTests, self).preconditions():
            return False
        return True

    def testSomething(self):
        if not self.preconditions():
            self.fail('Preconditions failed')

        _s = CulebraTests.sleep
        _v = CulebraTests.verbose

        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (384.29, 227.14) orientation=0",  _v)
        self.device.touchDip(384.29, 227.14, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (65.71, 345.71) orientation=0",  _v)
        self.device.touchDip(65.71, 345.71, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (118.57, 338.57) orientation=0",  _v)
        self.device.touchDip(118.57, 338.57, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (261.43, 191.43) orientation=0",  _v)
        self.device.touchDip(261.43, 191.43, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (220.0, 168.57) orientation=0",  _v)
        self.device.touchDip(220.0, 168.57, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (94.29, 695.71) orientation=0",  _v)
        self.device.touchDip(94.29, 695.71, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (201.43, 391.43) orientation=0",  _v)
        self.device.touchDip(201.43, 391.43, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (82.86, 712.86) orientation=0",  _v)
        self.device.touchDip(82.86, 712.86, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (198.57, 597.14) orientation=0",  _v)
        self.device.touchDip(198.57, 597.14, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (78.57, 710.0) orientation=0",  _v)
        self.device.touchDip(78.57, 710.0, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (90.0, 710.0) orientation=0",  _v)
        self.device.touchDip(90.0, 710.0, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (332.86, 351.43) orientation=0",  _v)
        self.device.touchDip(332.86, 351.43, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching view with text=u'INSTRUCTIONS'",  _v)
        self.vc.findViewWithTextOrRaise(u'INSTRUCTIONS').touch()
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (87.14, 708.57) orientation=0",  _v)
        self.device.touchDip(87.14, 708.57, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (174.29, 440.0) orientation=0",  _v)
        self.device.touchDip(174.29, 440.0, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (84.29, 708.57) orientation=0",  _v)
        self.device.touchDip(84.29, 708.57, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (87.14, 715.71) orientation=0",  _v)
        self.device.touchDip(87.14, 715.71, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.dragDip((200.0, 258.57), (205.71, 584.29), 1000, 20, 0)
        self.vc.sleep(1)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.dragDip((117.14, 628.57), (91.43, 145.71), 1000, 20, 0)
        self.vc.sleep(1)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (308.57, 438.57) orientation=0",  _v)
        self.device.touchDip(308.57, 438.57, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (111.43, 162.86) orientation=0",  _v)
        self.device.touchDip(111.43, 162.86, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (92.86, 174.29) orientation=0",  _v)
        self.device.touchDip(92.86, 174.29, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (102.86, 697.14) orientation=0",  _v)
        self.device.touchDip(102.86, 697.14, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (291.43, 187.14) orientation=0",  _v)
        self.device.touchDip(291.43, 187.14, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (75.71, 708.57) orientation=0",  _v)
        self.device.touchDip(75.71, 708.57, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (87.14, 708.57) orientation=0",  _v)
        self.device.touchDip(87.14, 708.57, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (280.0, 621.43) orientation=0",  _v)
        self.device.touchDip(280.0, 621.43, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching view with content-description=u'''Navigate up'''",  _v)
        self.vc.findViewWithContentDescriptionOrRaise(u'''Navigate up''').touch()
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (278.57, 637.14) orientation=0",  _v)
        self.device.touchDip(278.57, 637.14, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (341.43, 464.29) orientation=0",  _v)
        self.device.touchDip(341.43, 464.29, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (322.86, 501.43) orientation=0",  _v)
        self.device.touchDip(322.86, 501.43, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (322.86, 498.57) orientation=0",  _v)
        self.device.touchDip(322.86, 498.57, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (81.43, 710.0) orientation=0",  _v)
        self.device.touchDip(81.43, 710.0, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (288.57, 651.43) orientation=0",  _v)
        self.device.touchDip(288.57, 651.43, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (97.14, 695.71) orientation=0",  _v)
        self.device.touchDip(97.14, 695.71, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (85.71, 700.0) orientation=0",  _v)
        self.device.touchDip(85.71, 700.0, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.dragDip((124.29, 628.57), (117.14, 224.29), 1000, 20, 0)
        self.vc.sleep(1)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (98.57, 435.71) orientation=0",  _v)
        self.device.touchDip(98.57, 435.71, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (24.29, 57.14) orientation=0",  _v)
        self.device.touchDip(24.29, 57.14, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (298.57, 484.29) orientation=0",  _v)
        self.device.touchDip(298.57, 484.29, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (300.0, 484.29) orientation=0",  _v)
        self.device.touchDip(300.0, 484.29, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.dragDip((111.43, 648.57), (135.71, 108.57), 1000, 20, 0)
        self.vc.sleep(1)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.dragDip((122.86, 651.43), (118.57, 112.86), 1000, 20, 0)
        self.vc.sleep(1)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.dragDip((78.57, 652.86), (95.71, 84.29), 1000, 20, 0)
        self.vc.sleep(1)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.device.Log.d(TAG, "touching point by DIP @ (91.43, 711.43) orientation=0",  _v)
        self.device.touchDip(91.43, 711.43, 0)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)
        self.vc.sleep(_s)
        self.device.Log.d(TAG, "dumping content of window=-1",  _v)
        self.vc.dump(window=-1)


if __name__ == '__main__':
    CulebraTests.main()

